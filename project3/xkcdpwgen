#!/usr/bin/python3


import sys
import random


sys.path.append('words.txt')


def hist(n, k):
    """makes a histogram of k elements in n positions with a even distribution"""
    h = [0] * (n + 1)
    for i in range(k):
        h[random.randint(0, n)] += 1
    return h


def main():
    message = """usage: xkcdpwgen [-h] [-w WORDS] [-c CAPS] [-n NUMBERS] [-s SYMBOLS]
                
Generate a secure, memorable password using the XKCD method
                
optional arguments:
    -h, --help            show this help message and exit
    -w WORDS, --words WORDS
                          include WORDS words in the password (default=4)
    -c CAPS, --caps CAPS  capitalize the first letter of CAPS random words
                          (default=0)
    -n NUMBERS, --numbers NUMBERS
                          insert NUMBERS random numbers in the password
                          (default=0)
    -s SYMBOLS, --symbols SYMBOLS
                          insert SYMBOLS random symbols in the password
                          (default=0)"""
    symbols = "(~!@#$%^&*.:;)"
    with open('words.txt') as f:
        words = [w.strip() for w in f.readlines()]

    length = len(sys.argv)
    w = 4
    c = 0
    n = 0
    s = 0
    i = 1
    while i < length:
        if sys.argv[i] == "-h" or sys.argv[i] == "-help":
            print(message)
            sys.exit()
        elif sys.argv[i] == "-w" or sys.argv[i] == "-words":
            if sys.argv[i + 1].isdigit():
                w = int(sys.argv[i + 1])
                i += 1
            else:
                sys.exit("invalid argument not an integer")
        elif sys.argv[i] == "-c" or sys.argv[i] == "-caps":
            if sys.argv[i + 1].isdigit():
                c = int(sys.argv[i + 1])
                i += 1
            else:
                sys.exit("invalid argument not an integer")
        elif sys.argv[i] == "-n" or sys.argv[i] == "-numbers":
            if sys.argv[i + 1].isdigit():
                n = int(sys.argv[i + 1])
                i += 1
            else:
                sys.exit("invalid argument not an integer")
        elif sys.argv[i] == "-s" or sys.argv[i] == "-symbols":
            if sys.argv[i + 1].isdigit():
                s = int(sys.argv[i + 1])
                i += 1
            else:
                sys.exit("invalid argument: not an integer")
        else:
            print(i)
            sys.exit("invalid argument: choose from -h, -c, -n, -s")
        i += 1

    password = ""
    pos_c = random.sample(range(w), c)
    pos_n = hist(w, n)
    pos_s = hist(w, s)
    for j in range(w):
        while pos_n[j] > 0:
            password += str(random.randint(0, 9))
            pos_n[j] -= 1
        while pos_s[j] > 0:
            password += random.choice(symbols)
            pos_s[j] -= 1
        word = random.choice(words)
        if j in pos_c:
            cap = word.capitalize()
            password += cap
        else:
            password += word
        words.remove(word)

    while pos_n[w] > 0:
        password += str(random.randint(0, 9))
        pos_n[w] -= 1
    while pos_s[w] > 0:
        password += random.choice(symbols)
        pos_s[w] -= 1
    print(password)


if __name__ == "__main__":
    main()
